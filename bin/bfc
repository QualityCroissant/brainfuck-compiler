#!/bin/bash

# If there was anything but a singular argument provided to this script:

if [ $# -ne 1 ]; then
    echo "[BFC] Error: Expected file name to be specified in commandline call, and nothing more nor less."
    exit
fi

# If the file specified did not exist:

if [ ! -f "$1" ]; then
    echo "[BFC] Error: Could not find the specified file."
    exit
fi

# Otherwise, begin compilation process:

# Find where everything is:

INPUT_FILE="$(readlink -m $1)"
OUTPUT_FILE="$INPUT_FILE.build/$1"
BIN_DIRECTORY="$(dirname $0)"

# If the build directory for the BF source file does not exist, make it (for all of the generated files, including the resulting binary, to go in):

if [ ! -d "$INPUT_FILE.build" ]; then
    mkdir "$INPUT_FILE.build"
fi

# Go to the directory of this script:

cd "$BIN_DIRECTORY"

# Make the assembly source file:

# Add the contents of ../lib/start.s, then the assembly generated by the bfc binary program, then the contents of ../lib/end.s:

echo "$(< ../lib/start.s)" > "$OUTPUT_FILE.s"
../lib/bfc "$INPUT_FILE" "$OUTPUT_FILE.s"
echo "$(< ../lib/end.s)" >> "$OUTPUT_FILE.s"

# Assemble and link the generated assembly source file:

nasm -felf64 "$OUTPUT_FILE.s" -o "$OUTPUT_FILE.o"
ld "$OUTPUT_FILE.o" -o "$OUTPUT_FILE"
